<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.9 (Python 3.7.3 on win32)" generated="20190807 22:19:57.027">
<suite id="s1" name="All Scenarious" source="C:\Users\Nastya\PycharmProjects\python_training\rf\all_scenarious.robot">
<kw name="Init Fixtures" library="rf.AddressBook" type="setup">
<status status="PASS" starttime="20190807 22:19:57.275" endtime="20190807 22:20:03.317"></status>
</kw>
<test id="s1-t1" name="Add new group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20190807 22:20:03.321" level="INFO">${old_list} = [Group(name2, 271, header2, footer2)]</msg>
<status status="PASS" starttime="20190807 22:20:03.317" endtime="20190807 22:20:03.321"></status>
</kw>
<kw name="New Group" library="rf.AddressBook">
<arguments>
<arg>name1</arg>
<arg>header1</arg>
<arg>footer1</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20190807 22:20:03.321" level="INFO">${group} = Group(name1, None, header1, footer1)</msg>
<status status="PASS" starttime="20190807 22:20:03.321" endtime="20190807 22:20:03.321"></status>
</kw>
<kw name="Create Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:03.321" endtime="20190807 22:20:04.184"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20190807 22:20:04.188" level="INFO">${new_list} = [Group(name2, 271, header2, footer2), Group(name1, 273, header1, footer1)]</msg>
<status status="PASS" starttime="20190807 22:20:04.184" endtime="20190807 22:20:04.188"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:04.188" endtime="20190807 22:20:04.188"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:04.188" endtime="20190807 22:20:04.188"></status>
</kw>
<status status="PASS" starttime="20190807 22:20:03.317" endtime="20190807 22:20:04.188" critical="yes"></status>
</test>
<test id="s1-t2" name="Delete group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190807 22:20:04.192" level="INFO">${list} = [Group(name2, 271, header2, footer2), Group(name1, 273, header1, footer1)]</msg>
<status status="PASS" starttime="20190807 22:20:04.192" endtime="20190807 22:20:04.192"></status>
</kw>
<kw name="Verify Group List Is Not Empty" library="rf.AddressBook">
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:04.192" endtime="20190807 22:20:04.192"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20190807 22:20:04.196" level="INFO">${old_list} = [Group(name2, 271, header2, footer2), Group(name1, 273, header1, footer1)]</msg>
<status status="PASS" starttime="20190807 22:20:04.196" endtime="20190807 22:20:04.196"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${old_list}</arg>
</arguments>
<assign>
<var>${len}</var>
</assign>
<msg timestamp="20190807 22:20:04.196" level="INFO">Length is 2</msg>
<msg timestamp="20190807 22:20:04.196" level="INFO">${len} = 2</msg>
<status status="PASS" starttime="20190807 22:20:04.196" endtime="20190807 22:20:04.196"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.randrange(${len})</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<msg timestamp="20190807 22:20:04.204" level="INFO">${index} = 1</msg>
<status status="PASS" starttime="20190807 22:20:04.196" endtime="20190807 22:20:04.204"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20190807 22:20:04.204" level="INFO">${group} = Group(name1, 273, header1, footer1)</msg>
<status status="PASS" starttime="20190807 22:20:04.204" endtime="20190807 22:20:04.204"></status>
</kw>
<kw name="Delete Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:04.204" endtime="20190807 22:20:04.475"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20190807 22:20:04.479" level="INFO">${new_list} = [Group(name2, 271, header2, footer2)]</msg>
<status status="PASS" starttime="20190807 22:20:04.475" endtime="20190807 22:20:04.479"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:04.479" endtime="20190807 22:20:04.479"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:04.479" endtime="20190807 22:20:04.479"></status>
</kw>
<status status="PASS" starttime="20190807 22:20:04.192" endtime="20190807 22:20:04.479" critical="yes"></status>
</test>
<test id="s1-t3" name="Modify group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190807 22:20:04.483" level="INFO">${list} = [Group(name2, 271, header2, footer2)]</msg>
<status status="PASS" starttime="20190807 22:20:04.483" endtime="20190807 22:20:04.483"></status>
</kw>
<kw name="Verify Group List Is Not Empty" library="rf.AddressBook">
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:04.483" endtime="20190807 22:20:04.483"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20190807 22:20:04.487" level="INFO">${old_list} = [Group(name2, 271, header2, footer2)]</msg>
<status status="PASS" starttime="20190807 22:20:04.483" endtime="20190807 22:20:04.487"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${old_list}</arg>
</arguments>
<assign>
<var>${len}</var>
</assign>
<msg timestamp="20190807 22:20:04.487" level="INFO">Length is 1</msg>
<msg timestamp="20190807 22:20:04.487" level="INFO">${len} = 1</msg>
<status status="PASS" starttime="20190807 22:20:04.487" endtime="20190807 22:20:04.487"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.randrange(${len})</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<msg timestamp="20190807 22:20:04.491" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20190807 22:20:04.487" endtime="20190807 22:20:04.491"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20190807 22:20:04.491" level="INFO">${group} = Group(name2, 271, header2, footer2)</msg>
<status status="PASS" starttime="20190807 22:20:04.491" endtime="20190807 22:20:04.491"></status>
</kw>
<kw name="Get Group Id" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<assign>
<var>${id_group}</var>
</assign>
<msg timestamp="20190807 22:20:04.491" level="INFO">${id_group} = 271</msg>
<status status="PASS" starttime="20190807 22:20:04.491" endtime="20190807 22:20:04.491"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:04.491" endtime="20190807 22:20:04.491"></status>
</kw>
<kw name="New Group For Modify" library="rf.AddressBook">
<arguments>
<arg>name2</arg>
<arg>header2</arg>
<arg>footer2</arg>
<arg>${id_group}</arg>
</arguments>
<assign>
<var>${group_new_data}</var>
</assign>
<msg timestamp="20190807 22:20:04.495" level="INFO">${group_new_data} = Group(name2, 271, header2, footer2)</msg>
<status status="PASS" starttime="20190807 22:20:04.495" endtime="20190807 22:20:04.495"></status>
</kw>
<kw name="Modify Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
<arg>${group_new_data}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:04.495" endtime="20190807 22:20:05.318"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20190807 22:20:05.318" level="INFO">${new_list} = [Group(name2, 271, header2, footer2)]</msg>
<status status="PASS" starttime="20190807 22:20:05.318" endtime="20190807 22:20:05.318"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group_new_data}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:05.318" endtime="20190807 22:20:05.318"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:05.318" endtime="20190807 22:20:05.322"></status>
</kw>
<status status="PASS" starttime="20190807 22:20:04.483" endtime="20190807 22:20:05.322" critical="yes"></status>
</test>
<test id="s1-t4" name="Add new contact">
<kw name="Get Contact List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20190807 22:20:05.326" level="INFO">${old_list} = []</msg>
<status status="PASS" starttime="20190807 22:20:05.322" endtime="20190807 22:20:05.326"></status>
</kw>
<kw name="New Contact" library="rf.AddressBook">
<arguments>
<arg>firstname1</arg>
<arg>lastname1</arg>
<arg>address1</arg>
</arguments>
<assign>
<var>${contact}</var>
</assign>
<msg timestamp="20190807 22:20:05.326" level="INFO">${contact} = Contact(firstname1, lastname1, None)</msg>
<status status="PASS" starttime="20190807 22:20:05.326" endtime="20190807 22:20:05.326"></status>
</kw>
<kw name="Create Contact" library="rf.AddressBook">
<arguments>
<arg>${contact}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:05.326" endtime="20190807 22:20:06.173"></status>
</kw>
<kw name="Get Contact List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20190807 22:20:06.173" level="INFO">${new_list} = [Contact(firstname1, lastname1, 250)]</msg>
<status status="PASS" starttime="20190807 22:20:06.173" endtime="20190807 22:20:06.173"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${contact}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:06.173" endtime="20190807 22:20:06.173"></status>
</kw>
<kw name="Contact Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:06.177" endtime="20190807 22:20:06.177"></status>
</kw>
<status status="PASS" starttime="20190807 22:20:05.322" endtime="20190807 22:20:06.177" critical="yes"></status>
</test>
<test id="s1-t5" name="Delete contact">
<kw name="Get Contact List" library="rf.AddressBook">
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190807 22:20:06.181" level="INFO">${list} = [Contact(firstname1, lastname1, 250)]</msg>
<status status="PASS" starttime="20190807 22:20:06.177" endtime="20190807 22:20:06.181"></status>
</kw>
<kw name="Verify Contact List Is Not Empty" library="rf.AddressBook">
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:06.181" endtime="20190807 22:20:06.181"></status>
</kw>
<kw name="Get Contact List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20190807 22:20:06.181" level="INFO">${old_list} = [Contact(firstname1, lastname1, 250)]</msg>
<status status="PASS" starttime="20190807 22:20:06.181" endtime="20190807 22:20:06.181"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${old_list}</arg>
</arguments>
<assign>
<var>${len}</var>
</assign>
<msg timestamp="20190807 22:20:06.185" level="INFO">Length is 1</msg>
<msg timestamp="20190807 22:20:06.185" level="INFO">${len} = 1</msg>
<status status="PASS" starttime="20190807 22:20:06.185" endtime="20190807 22:20:06.185"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.randrange(${len})</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<msg timestamp="20190807 22:20:06.185" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20190807 22:20:06.185" endtime="20190807 22:20:06.185"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${contact}</var>
</assign>
<msg timestamp="20190807 22:20:06.189" level="INFO">${contact} = Contact(firstname1, lastname1, 250)</msg>
<status status="PASS" starttime="20190807 22:20:06.189" endtime="20190807 22:20:06.189"></status>
</kw>
<kw name="Delete Contact" library="rf.AddressBook">
<arguments>
<arg>${contact}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:06.189" endtime="20190807 22:20:06.389"></status>
</kw>
<kw name="Get Contact List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20190807 22:20:06.393" level="INFO">${new_list} = []</msg>
<status status="PASS" starttime="20190807 22:20:06.389" endtime="20190807 22:20:06.393"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${contact}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:06.393" endtime="20190807 22:20:06.397"></status>
</kw>
<kw name="Contact Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:06.397" endtime="20190807 22:20:06.397"></status>
</kw>
<status status="PASS" starttime="20190807 22:20:06.177" endtime="20190807 22:20:06.397" critical="yes"></status>
</test>
<test id="s1-t6" name="Modify contact">
<kw name="Get Contact List" library="rf.AddressBook">
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190807 22:20:06.405" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20190807 22:20:06.405" endtime="20190807 22:20:06.405"></status>
</kw>
<kw name="Verify Contact List Is Not Empty" library="rf.AddressBook">
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:06.405" endtime="20190807 22:20:07.212"></status>
</kw>
<kw name="Get Contact List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20190807 22:20:07.212" level="INFO">${old_list} = [Contact(firstname4, lastname4, 251)]</msg>
<status status="PASS" starttime="20190807 22:20:07.212" endtime="20190807 22:20:07.212"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${old_list}</arg>
</arguments>
<assign>
<var>${len}</var>
</assign>
<msg timestamp="20190807 22:20:07.212" level="INFO">Length is 1</msg>
<msg timestamp="20190807 22:20:07.212" level="INFO">${len} = 1</msg>
<status status="PASS" starttime="20190807 22:20:07.212" endtime="20190807 22:20:07.212"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.randrange(${len})</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<msg timestamp="20190807 22:20:07.216" level="INFO">${index} = 0</msg>
<status status="PASS" starttime="20190807 22:20:07.212" endtime="20190807 22:20:07.216"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${contact}</var>
</assign>
<msg timestamp="20190807 22:20:07.216" level="INFO">${contact} = Contact(firstname4, lastname4, 251)</msg>
<status status="PASS" starttime="20190807 22:20:07.216" endtime="20190807 22:20:07.216"></status>
</kw>
<kw name="Get Contact Id" library="rf.AddressBook">
<arguments>
<arg>${contact}</arg>
</arguments>
<assign>
<var>${id_contact}</var>
</assign>
<msg timestamp="20190807 22:20:07.216" level="INFO">${id_contact} = 251</msg>
<status status="PASS" starttime="20190807 22:20:07.216" endtime="20190807 22:20:07.216"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${contact}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:07.216" endtime="20190807 22:20:07.216"></status>
</kw>
<kw name="New Contact For Modify" library="rf.AddressBook">
<arguments>
<arg>firstname2</arg>
<arg>lastname2</arg>
<arg>address2</arg>
<arg>${id_contact}</arg>
</arguments>
<assign>
<var>${contact_new_data}</var>
</assign>
<msg timestamp="20190807 22:20:07.216" level="INFO">${contact_new_data} = Contact(firstname2, lastname2, 251)</msg>
<status status="PASS" starttime="20190807 22:20:07.216" endtime="20190807 22:20:07.216"></status>
</kw>
<kw name="Modify Contact" library="rf.AddressBook">
<arguments>
<arg>${contact}</arg>
<arg>${contact_new_data}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:07.220" endtime="20190807 22:20:08.031"></status>
</kw>
<kw name="Get Contact List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20190807 22:20:08.035" level="INFO">${new_list} = [Contact(firstname2, lastname2, 251)]</msg>
<status status="PASS" starttime="20190807 22:20:08.031" endtime="20190807 22:20:08.035"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${contact_new_data}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:08.035" endtime="20190807 22:20:08.035"></status>
</kw>
<kw name="Contact Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20190807 22:20:08.035" endtime="20190807 22:20:08.035"></status>
</kw>
<status status="PASS" starttime="20190807 22:20:06.401" endtime="20190807 22:20:08.035" critical="yes"></status>
</test>
<kw name="Destroy Fixtures" library="rf.AddressBook" type="teardown">
<status status="PASS" starttime="20190807 22:20:08.039" endtime="20190807 22:20:10.161"></status>
</kw>
<status status="PASS" starttime="20190807 22:19:57.027" endtime="20190807 22:20:10.161"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="All Scenarious">All Scenarious</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
